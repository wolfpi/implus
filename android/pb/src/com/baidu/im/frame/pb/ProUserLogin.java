// Generated by the protocol buffer compiler.  DO NOT EDIT!

package com.baidu.im.frame.pb;

public final class ProUserLogin {
  private ProUserLogin() {}
  @SuppressWarnings("hiding")
  public static final class LoginReq extends
      com.google.protobuf.micro.MessageMicro {
    public LoginReq() {}

    // required string channelKey = 1;
    public static final int CHANNELKEY_FIELD_NUMBER = 1;
    private boolean hasChannelKey;
    private java.lang.String channelKey_ = "";
    public java.lang.String getChannelKey() { return channelKey_; }
    public boolean hasChannelKey() { return hasChannelKey; }
    public LoginReq setChannelKey(java.lang.String value) {
      hasChannelKey = true;
      channelKey_ = value;
      return this;
    }
    public LoginReq clearChannelKey() {
      hasChannelKey = false;
      channelKey_ = "";
      return this;
    }

    // optional string loginName = 2;
    public static final int LOGINNAME_FIELD_NUMBER = 2;
    private boolean hasLoginName;
    private java.lang.String loginName_ = "";
    public java.lang.String getLoginName() { return loginName_; }
    public boolean hasLoginName() { return hasLoginName; }
    public LoginReq setLoginName(java.lang.String value) {
      hasLoginName = true;
      loginName_ = value;
      return this;
    }
    public LoginReq clearLoginName() {
      hasLoginName = false;
      loginName_ = "";
      return this;
    }

    // optional string password = 3;
    public static final int PASSWORD_FIELD_NUMBER = 3;
    private boolean hasPassword;
    private java.lang.String password_ = "";
    public java.lang.String getPassword() { return password_; }
    public boolean hasPassword() { return hasPassword; }
    public LoginReq setPassword(java.lang.String value) {
      hasPassword = true;
      password_ = value;
      return this;
    }
    public LoginReq clearPassword() {
      hasPassword = false;
      password_ = "";
      return this;
    }

    // optional string token = 4;
    public static final int TOKEN_FIELD_NUMBER = 4;
    private boolean hasToken;
    private java.lang.String token_ = "";
    public java.lang.String getToken() { return token_; }
    public boolean hasToken() { return hasToken; }
    public LoginReq setToken(java.lang.String value) {
      hasToken = true;
      token_ = value;
      return this;
    }
    public LoginReq clearToken() {
      hasToken = false;
      token_ = "";
      return this;
    }

    // repeated .KV args = 5;
    public static final int ARGS_FIELD_NUMBER = 5;
    private java.util.List<com.baidu.im.frame.pb.ObjKv.KV> args_ =
      java.util.Collections.emptyList();
    public java.util.List<com.baidu.im.frame.pb.ObjKv.KV> getArgsList() {
      return args_;
    }
    public int getArgsCount() { return args_.size(); }
    public com.baidu.im.frame.pb.ObjKv.KV getArgs(int index) {
      return args_.get(index);
    }
    public LoginReq setArgs(int index, com.baidu.im.frame.pb.ObjKv.KV value) {
      if (value == null) {
        throw new NullPointerException();
      }
      args_.set(index, value);
      return this;
    }
    public LoginReq addArgs(com.baidu.im.frame.pb.ObjKv.KV value) {
      if (value == null) {
        throw new NullPointerException();
      }
      if (args_.isEmpty()) {
        args_ = new java.util.ArrayList<com.baidu.im.frame.pb.ObjKv.KV>();
      }
      args_.add(value);
      return this;
    }
    public LoginReq clearArgs() {
      args_ = java.util.Collections.emptyList();
      return this;
    }

    // optional bytes extra = 6;
    public static final int EXTRA_FIELD_NUMBER = 6;
    private boolean hasExtra;
    private com.google.protobuf.micro.ByteStringMicro extra_ = com.google.protobuf.micro.ByteStringMicro.EMPTY;
    public com.google.protobuf.micro.ByteStringMicro getExtra() { return extra_; }
    public boolean hasExtra() { return hasExtra; }
    public LoginReq setExtra(com.google.protobuf.micro.ByteStringMicro value) {
      hasExtra = true;
      extra_ = value;
      return this;
    }
    public LoginReq clearExtra() {
      hasExtra = false;
      extra_ = com.google.protobuf.micro.ByteStringMicro.EMPTY;
      return this;
    }

    public final LoginReq clear() {
      clearChannelKey();
      clearLoginName();
      clearPassword();
      clearToken();
      clearArgs();
      clearExtra();
      cachedSize = -1;
      return this;
    }

    public final boolean isInitialized() {
      if (!hasChannelKey) return false;
      for (com.baidu.im.frame.pb.ObjKv.KV element : getArgsList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.micro.CodedOutputStreamMicro output)
                        throws java.io.IOException {
      if (hasChannelKey()) {
        output.writeString(1, getChannelKey());
      }
      if (hasLoginName()) {
        output.writeString(2, getLoginName());
      }
      if (hasPassword()) {
        output.writeString(3, getPassword());
      }
      if (hasToken()) {
        output.writeString(4, getToken());
      }
      for (com.baidu.im.frame.pb.ObjKv.KV element : getArgsList()) {
        output.writeMessage(5, element);
      }
      if (hasExtra()) {
        output.writeBytes(6, getExtra());
      }
    }

    private int cachedSize = -1;
    @Override
    public int getCachedSize() {
      if (cachedSize < 0) {
        // getSerializedSize sets cachedSize
        getSerializedSize();
      }
      return cachedSize;
    }

    @Override
    public int getSerializedSize() {
      int size = 0;
      if (hasChannelKey()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeStringSize(1, getChannelKey());
      }
      if (hasLoginName()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeStringSize(2, getLoginName());
      }
      if (hasPassword()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeStringSize(3, getPassword());
      }
      if (hasToken()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeStringSize(4, getToken());
      }
      for (com.baidu.im.frame.pb.ObjKv.KV element : getArgsList()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeMessageSize(5, element);
      }
      if (hasExtra()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeBytesSize(6, getExtra());
      }
      cachedSize = size;
      return size;
    }

    @Override
    public LoginReq mergeFrom(
        com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            setChannelKey(input.readString());
            break;
          }
          case 18: {
            setLoginName(input.readString());
            break;
          }
          case 26: {
            setPassword(input.readString());
            break;
          }
          case 34: {
            setToken(input.readString());
            break;
          }
          case 42: {
            com.baidu.im.frame.pb.ObjKv.KV value = new com.baidu.im.frame.pb.ObjKv.KV();
            input.readMessage(value);
            addArgs(value);
            break;
          }
          case 50: {
            setExtra(input.readBytes());
            break;
          }
        }
      }
    }

    public static LoginReq parseFrom(byte[] data)
        throws com.google.protobuf.micro.InvalidProtocolBufferMicroException {
      return (LoginReq) (new LoginReq().mergeFrom(data));
    }

    public static LoginReq parseFrom(
            com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      return new LoginReq().mergeFrom(input);
    }

  }

  @SuppressWarnings("hiding")
  public static final class LoginResp extends
      com.google.protobuf.micro.MessageMicro {
    public LoginResp() {}

    // optional bytes extra = 1;
    public static final int EXTRA_FIELD_NUMBER = 1;
    private boolean hasExtra;
    private com.google.protobuf.micro.ByteStringMicro extra_ = com.google.protobuf.micro.ByteStringMicro.EMPTY;
    public com.google.protobuf.micro.ByteStringMicro getExtra() { return extra_; }
    public boolean hasExtra() { return hasExtra; }
    public LoginResp setExtra(com.google.protobuf.micro.ByteStringMicro value) {
      hasExtra = true;
      extra_ = value;
      return this;
    }
    public LoginResp clearExtra() {
      hasExtra = false;
      extra_ = com.google.protobuf.micro.ByteStringMicro.EMPTY;
      return this;
    }

    public final LoginResp clear() {
      clearExtra();
      cachedSize = -1;
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.micro.CodedOutputStreamMicro output)
                        throws java.io.IOException {
      if (hasExtra()) {
        output.writeBytes(1, getExtra());
      }
    }

    private int cachedSize = -1;
    @Override
    public int getCachedSize() {
      if (cachedSize < 0) {
        // getSerializedSize sets cachedSize
        getSerializedSize();
      }
      return cachedSize;
    }

    @Override
    public int getSerializedSize() {
      int size = 0;
      if (hasExtra()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeBytesSize(1, getExtra());
      }
      cachedSize = size;
      return size;
    }

    @Override
    public LoginResp mergeFrom(
        com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            setExtra(input.readBytes());
            break;
          }
        }
      }
    }

    public static LoginResp parseFrom(byte[] data)
        throws com.google.protobuf.micro.InvalidProtocolBufferMicroException {
      return (LoginResp) (new LoginResp().mergeFrom(data));
    }

    public static LoginResp parseFrom(
            com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      return new LoginResp().mergeFrom(input);
    }

  }

}
