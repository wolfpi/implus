// Generated by the protocol buffer compiler.  DO NOT EDIT!

package com.baidu.im.frame.pb;

public final class ProSplitPartsUploadSuccess {
  private ProSplitPartsUploadSuccess() {}
  @SuppressWarnings("hiding")
  public static final class SplitPartsUploadSuccessReq extends
      com.google.protobuf.micro.MessageMicro {
    public SplitPartsUploadSuccessReq() {}

    // required string fileId = 1;
    public static final int FILEID_FIELD_NUMBER = 1;
    private boolean hasFileId;
    private java.lang.String fileId_ = "";
    public java.lang.String getFileId() { return fileId_; }
    public boolean hasFileId() { return hasFileId; }
    public SplitPartsUploadSuccessReq setFileId(java.lang.String value) {
      hasFileId = true;
      fileId_ = value;
      return this;
    }
    public SplitPartsUploadSuccessReq clearFileId() {
      hasFileId = false;
      fileId_ = "";
      return this;
    }

    // required string uploadId = 2;
    public static final int UPLOADID_FIELD_NUMBER = 2;
    private boolean hasUploadId;
    private java.lang.String uploadId_ = "";
    public java.lang.String getUploadId() { return uploadId_; }
    public boolean hasUploadId() { return hasUploadId; }
    public SplitPartsUploadSuccessReq setUploadId(java.lang.String value) {
      hasUploadId = true;
      uploadId_ = value;
      return this;
    }
    public SplitPartsUploadSuccessReq clearUploadId() {
      hasUploadId = false;
      uploadId_ = "";
      return this;
    }

    // repeated .SplitPartInfo parts = 3;
    public static final int PARTS_FIELD_NUMBER = 3;
    private java.util.List<com.baidu.im.frame.pb.ObjSplitPartInfo.SplitPartInfo> parts_ =
      java.util.Collections.emptyList();
    public java.util.List<com.baidu.im.frame.pb.ObjSplitPartInfo.SplitPartInfo> getPartsList() {
      return parts_;
    }
    public int getPartsCount() { return parts_.size(); }
    public com.baidu.im.frame.pb.ObjSplitPartInfo.SplitPartInfo getParts(int index) {
      return parts_.get(index);
    }
    public SplitPartsUploadSuccessReq setParts(int index, com.baidu.im.frame.pb.ObjSplitPartInfo.SplitPartInfo value) {
      if (value == null) {
        throw new NullPointerException();
      }
      parts_.set(index, value);
      return this;
    }
    public SplitPartsUploadSuccessReq addParts(com.baidu.im.frame.pb.ObjSplitPartInfo.SplitPartInfo value) {
      if (value == null) {
        throw new NullPointerException();
      }
      if (parts_.isEmpty()) {
        parts_ = new java.util.ArrayList<com.baidu.im.frame.pb.ObjSplitPartInfo.SplitPartInfo>();
      }
      parts_.add(value);
      return this;
    }
    public SplitPartsUploadSuccessReq clearParts() {
      parts_ = java.util.Collections.emptyList();
      return this;
    }

    public final SplitPartsUploadSuccessReq clear() {
      clearFileId();
      clearUploadId();
      clearParts();
      cachedSize = -1;
      return this;
    }

    public final boolean isInitialized() {
      if (!hasFileId) return false;
      if (!hasUploadId) return false;
      for (com.baidu.im.frame.pb.ObjSplitPartInfo.SplitPartInfo element : getPartsList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.micro.CodedOutputStreamMicro output)
                        throws java.io.IOException {
      if (hasFileId()) {
        output.writeString(1, getFileId());
      }
      if (hasUploadId()) {
        output.writeString(2, getUploadId());
      }
      for (com.baidu.im.frame.pb.ObjSplitPartInfo.SplitPartInfo element : getPartsList()) {
        output.writeMessage(3, element);
      }
    }

    private int cachedSize = -1;
    @Override
    public int getCachedSize() {
      if (cachedSize < 0) {
        // getSerializedSize sets cachedSize
        getSerializedSize();
      }
      return cachedSize;
    }

    @Override
    public int getSerializedSize() {
      int size = 0;
      if (hasFileId()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeStringSize(1, getFileId());
      }
      if (hasUploadId()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeStringSize(2, getUploadId());
      }
      for (com.baidu.im.frame.pb.ObjSplitPartInfo.SplitPartInfo element : getPartsList()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeMessageSize(3, element);
      }
      cachedSize = size;
      return size;
    }

    @Override
    public SplitPartsUploadSuccessReq mergeFrom(
        com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            setFileId(input.readString());
            break;
          }
          case 18: {
            setUploadId(input.readString());
            break;
          }
          case 26: {
            com.baidu.im.frame.pb.ObjSplitPartInfo.SplitPartInfo value = new com.baidu.im.frame.pb.ObjSplitPartInfo.SplitPartInfo();
            input.readMessage(value);
            addParts(value);
            break;
          }
        }
      }
    }

    public static SplitPartsUploadSuccessReq parseFrom(byte[] data)
        throws com.google.protobuf.micro.InvalidProtocolBufferMicroException {
      return (SplitPartsUploadSuccessReq) (new SplitPartsUploadSuccessReq().mergeFrom(data));
    }

    public static SplitPartsUploadSuccessReq parseFrom(
            com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      return new SplitPartsUploadSuccessReq().mergeFrom(input);
    }

  }

  @SuppressWarnings("hiding")
  public static final class SplitPartsUploadSuccessRsp extends
      com.google.protobuf.micro.MessageMicro {
    public SplitPartsUploadSuccessRsp() {}

    public final SplitPartsUploadSuccessRsp clear() {
      cachedSize = -1;
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.micro.CodedOutputStreamMicro output) {
    }

    private int cachedSize = -1;
    @Override
    public int getCachedSize() {
      if (cachedSize < 0) {
        // getSerializedSize sets cachedSize
        getSerializedSize();
      }
      return cachedSize;
    }

    @Override
    public int getSerializedSize() {
      int size = 0;
      cachedSize = size;
      return size;
    }

    @Override
    public SplitPartsUploadSuccessRsp mergeFrom(
        com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
        }
      }
    }

    public static SplitPartsUploadSuccessRsp parseFrom(byte[] data)
        throws com.google.protobuf.micro.InvalidProtocolBufferMicroException {
      return (SplitPartsUploadSuccessRsp) (new SplitPartsUploadSuccessRsp().mergeFrom(data));
    }

    public static SplitPartsUploadSuccessRsp parseFrom(
            com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      return new SplitPartsUploadSuccessRsp().mergeFrom(input);
    }

  }

}
