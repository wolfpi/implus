// Generated by the protocol buffer compiler.  DO NOT EDIT!

package com.baidu.im.frame.pb;

public final class ObjBizDownPacket {
  private ObjBizDownPacket() {}
  @SuppressWarnings("hiding")
  public static final class BizDownPackage extends
      com.google.protobuf.micro.MessageMicro {
    public BizDownPackage() {}

    // required .EPacketType packetType = 1;
    public static final int PACKETTYPE_FIELD_NUMBER = 1;
    private boolean hasPacketType;
    private int packetType_ = com.baidu.im.frame.pb.EnumPacketType.REQUEST;
    public boolean hasPacketType() { return hasPacketType; }
    public int getPacketType() { return packetType_; }
    public BizDownPackage setPacketType(int value) {
      hasPacketType = true;
      packetType_ = value;
      return this;
    }
    public BizDownPackage clearPacketType() {
      hasPacketType = false;
      packetType_ = com.baidu.im.frame.pb.EnumPacketType.REQUEST;
      return this;
    }

    // optional uint32 bizCode = 2;
    public static final int BIZCODE_FIELD_NUMBER = 2;
    private boolean hasBizCode;
    private int bizCode_ = 0;
    public int getBizCode() { return bizCode_; }
    public boolean hasBizCode() { return hasBizCode; }
    public BizDownPackage setBizCode(int value) {
      hasBizCode = true;
      bizCode_ = value;
      return this;
    }
    public BizDownPackage clearBizCode() {
      hasBizCode = false;
      bizCode_ = 0;
      return this;
    }

    // optional bytes bizData = 3;
    public static final int BIZDATA_FIELD_NUMBER = 3;
    private boolean hasBizData;
    private com.google.protobuf.micro.ByteStringMicro bizData_ = com.google.protobuf.micro.ByteStringMicro.EMPTY;
    public com.google.protobuf.micro.ByteStringMicro getBizData() { return bizData_; }
    public boolean hasBizData() { return hasBizData; }
    public BizDownPackage setBizData(com.google.protobuf.micro.ByteStringMicro value) {
      hasBizData = true;
      bizData_ = value;
      return this;
    }
    public BizDownPackage clearBizData() {
      hasBizData = false;
      bizData_ = com.google.protobuf.micro.ByteStringMicro.EMPTY;
      return this;
    }

    // optional uint32 chunkId = 4 [default = 0];
    public static final int CHUNKID_FIELD_NUMBER = 4;
    private boolean hasChunkId;
    private int chunkId_ = 0;
    public int getChunkId() { return chunkId_; }
    public boolean hasChunkId() { return hasChunkId; }
    public BizDownPackage setChunkId(int value) {
      hasChunkId = true;
      chunkId_ = value;
      return this;
    }
    public BizDownPackage clearChunkId() {
      hasChunkId = false;
      chunkId_ = 0;
      return this;
    }

    public final BizDownPackage clear() {
      clearPacketType();
      clearBizCode();
      clearBizData();
      clearChunkId();
      cachedSize = -1;
      return this;
    }

    public final boolean isInitialized() {
      if (!hasPacketType) return false;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.micro.CodedOutputStreamMicro output)
                        throws java.io.IOException {
      if (hasPacketType()) {
        output.writeInt32(1, getPacketType());
      }
      if (hasBizCode()) {
        output.writeUInt32(2, getBizCode());
      }
      if (hasBizData()) {
        output.writeBytes(3, getBizData());
      }
      if (hasChunkId()) {
        output.writeUInt32(4, getChunkId());
      }
    }

    private int cachedSize = -1;
    @Override
    public int getCachedSize() {
      if (cachedSize < 0) {
        // getSerializedSize sets cachedSize
        getSerializedSize();
      }
      return cachedSize;
    }

    @Override
    public int getSerializedSize() {
      int size = 0;
      if (hasPacketType()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeInt32Size(1, getPacketType());
      }
      if (hasBizCode()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeUInt32Size(2, getBizCode());
      }
      if (hasBizData()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeBytesSize(3, getBizData());
      }
      if (hasChunkId()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeUInt32Size(4, getChunkId());
      }
      cachedSize = size;
      return size;
    }

    @Override
    public BizDownPackage mergeFrom(
        com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
              setPacketType(input.readInt32());
            break;
          }
          case 16: {
            setBizCode(input.readUInt32());
            break;
          }
          case 26: {
            setBizData(input.readBytes());
            break;
          }
          case 32: {
            setChunkId(input.readUInt32());
            break;
          }
        }
      }
    }

    public static BizDownPackage parseFrom(byte[] data)
        throws com.google.protobuf.micro.InvalidProtocolBufferMicroException {
      return (BizDownPackage) (new BizDownPackage().mergeFrom(data));
    }

    public static BizDownPackage parseFrom(
            com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      return new BizDownPackage().mergeFrom(input);
    }

  }

}
