// Generated by the protocol buffer compiler.  DO NOT EDIT!

package com.baidu.im.frame.pb;

public final class ProUpdateConfig {
  private ProUpdateConfig() {}
  @SuppressWarnings("hiding")
  public static final class UpdateConfigReq extends
      com.google.protobuf.micro.MessageMicro {
    public UpdateConfigReq() {}

    // repeated .ConfigGroup localConfig = 1;
    public static final int LOCALCONFIG_FIELD_NUMBER = 1;
    private java.util.List<com.baidu.im.frame.pb.ObjConfigGroup.ConfigGroup> localConfig_ =
      java.util.Collections.emptyList();
    public java.util.List<com.baidu.im.frame.pb.ObjConfigGroup.ConfigGroup> getLocalConfigList() {
      return localConfig_;
    }
    public int getLocalConfigCount() { return localConfig_.size(); }
    public com.baidu.im.frame.pb.ObjConfigGroup.ConfigGroup getLocalConfig(int index) {
      return localConfig_.get(index);
    }
    public UpdateConfigReq setLocalConfig(int index, com.baidu.im.frame.pb.ObjConfigGroup.ConfigGroup value) {
      if (value == null) {
        throw new NullPointerException();
      }
      localConfig_.set(index, value);
      return this;
    }
    public UpdateConfigReq addLocalConfig(com.baidu.im.frame.pb.ObjConfigGroup.ConfigGroup value) {
      if (value == null) {
        throw new NullPointerException();
      }
      if (localConfig_.isEmpty()) {
        localConfig_ = new java.util.ArrayList<com.baidu.im.frame.pb.ObjConfigGroup.ConfigGroup>();
      }
      localConfig_.add(value);
      return this;
    }
    public UpdateConfigReq clearLocalConfig() {
      localConfig_ = java.util.Collections.emptyList();
      return this;
    }

    public final UpdateConfigReq clear() {
      clearLocalConfig();
      cachedSize = -1;
      return this;
    }

    public final boolean isInitialized() {
      for (com.baidu.im.frame.pb.ObjConfigGroup.ConfigGroup element : getLocalConfigList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.micro.CodedOutputStreamMicro output)
                        throws java.io.IOException {
      for (com.baidu.im.frame.pb.ObjConfigGroup.ConfigGroup element : getLocalConfigList()) {
        output.writeMessage(1, element);
      }
    }

    private int cachedSize = -1;
    @Override
    public int getCachedSize() {
      if (cachedSize < 0) {
        // getSerializedSize sets cachedSize
        getSerializedSize();
      }
      return cachedSize;
    }

    @Override
    public int getSerializedSize() {
      int size = 0;
      for (com.baidu.im.frame.pb.ObjConfigGroup.ConfigGroup element : getLocalConfigList()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeMessageSize(1, element);
      }
      cachedSize = size;
      return size;
    }

    @Override
    public UpdateConfigReq mergeFrom(
        com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            com.baidu.im.frame.pb.ObjConfigGroup.ConfigGroup value = new com.baidu.im.frame.pb.ObjConfigGroup.ConfigGroup();
            input.readMessage(value);
            addLocalConfig(value);
            break;
          }
        }
      }
    }

    public static UpdateConfigReq parseFrom(byte[] data)
        throws com.google.protobuf.micro.InvalidProtocolBufferMicroException {
      return (UpdateConfigReq) (new UpdateConfigReq().mergeFrom(data));
    }

    public static UpdateConfigReq parseFrom(
            com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      return new UpdateConfigReq().mergeFrom(input);
    }

  }

  @SuppressWarnings("hiding")
  public static final class UpdateConfigRsp extends
      com.google.protobuf.micro.MessageMicro {
    public UpdateConfigRsp() {}

    // repeated .ConfigGroup newConfig = 1;
    public static final int NEWCONFIG_FIELD_NUMBER = 1;
    private java.util.List<com.baidu.im.frame.pb.ObjConfigGroup.ConfigGroup> newConfig_ =
      java.util.Collections.emptyList();
    public java.util.List<com.baidu.im.frame.pb.ObjConfigGroup.ConfigGroup> getNewConfigList() {
      return newConfig_;
    }
    public int getNewConfigCount() { return newConfig_.size(); }
    public com.baidu.im.frame.pb.ObjConfigGroup.ConfigGroup getNewConfig(int index) {
      return newConfig_.get(index);
    }
    public UpdateConfigRsp setNewConfig(int index, com.baidu.im.frame.pb.ObjConfigGroup.ConfigGroup value) {
      if (value == null) {
        throw new NullPointerException();
      }
      newConfig_.set(index, value);
      return this;
    }
    public UpdateConfigRsp addNewConfig(com.baidu.im.frame.pb.ObjConfigGroup.ConfigGroup value) {
      if (value == null) {
        throw new NullPointerException();
      }
      if (newConfig_.isEmpty()) {
        newConfig_ = new java.util.ArrayList<com.baidu.im.frame.pb.ObjConfigGroup.ConfigGroup>();
      }
      newConfig_.add(value);
      return this;
    }
    public UpdateConfigRsp clearNewConfig() {
      newConfig_ = java.util.Collections.emptyList();
      return this;
    }

    // required uint64 timestamp = 2;
    public static final int TIMESTAMP_FIELD_NUMBER = 2;
    private boolean hasTimestamp;
    private long timestamp_ = 0L;
    public long getTimestamp() { return timestamp_; }
    public boolean hasTimestamp() { return hasTimestamp; }
    public UpdateConfigRsp setTimestamp(long value) {
      hasTimestamp = true;
      timestamp_ = value;
      return this;
    }
    public UpdateConfigRsp clearTimestamp() {
      hasTimestamp = false;
      timestamp_ = 0L;
      return this;
    }

    public final UpdateConfigRsp clear() {
      clearNewConfig();
      clearTimestamp();
      cachedSize = -1;
      return this;
    }

    public final boolean isInitialized() {
      if (!hasTimestamp) return false;
      for (com.baidu.im.frame.pb.ObjConfigGroup.ConfigGroup element : getNewConfigList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.micro.CodedOutputStreamMicro output)
                        throws java.io.IOException {
      for (com.baidu.im.frame.pb.ObjConfigGroup.ConfigGroup element : getNewConfigList()) {
        output.writeMessage(1, element);
      }
      if (hasTimestamp()) {
        output.writeUInt64(2, getTimestamp());
      }
    }

    private int cachedSize = -1;
    @Override
    public int getCachedSize() {
      if (cachedSize < 0) {
        // getSerializedSize sets cachedSize
        getSerializedSize();
      }
      return cachedSize;
    }

    @Override
    public int getSerializedSize() {
      int size = 0;
      for (com.baidu.im.frame.pb.ObjConfigGroup.ConfigGroup element : getNewConfigList()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeMessageSize(1, element);
      }
      if (hasTimestamp()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeUInt64Size(2, getTimestamp());
      }
      cachedSize = size;
      return size;
    }

    @Override
    public UpdateConfigRsp mergeFrom(
        com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            com.baidu.im.frame.pb.ObjConfigGroup.ConfigGroup value = new com.baidu.im.frame.pb.ObjConfigGroup.ConfigGroup();
            input.readMessage(value);
            addNewConfig(value);
            break;
          }
          case 16: {
            setTimestamp(input.readUInt64());
            break;
          }
        }
      }
    }

    public static UpdateConfigRsp parseFrom(byte[] data)
        throws com.google.protobuf.micro.InvalidProtocolBufferMicroException {
      return (UpdateConfigRsp) (new UpdateConfigRsp().mergeFrom(data));
    }

    public static UpdateConfigRsp parseFrom(
            com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      return new UpdateConfigRsp().mergeFrom(input);
    }

  }

}
