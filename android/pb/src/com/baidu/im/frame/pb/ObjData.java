// Generated by the protocol buffer compiler.  DO NOT EDIT!

package com.baidu.im.frame.pb;

public final class ObjData {
  private ObjData() {}
  @SuppressWarnings("hiding")
  public static final class Data extends
      com.google.protobuf.micro.MessageMicro {
    public Data() {}

    // required string dataId = 1;
    public static final int DATAID_FIELD_NUMBER = 1;
    private boolean hasDataId;
    private java.lang.String dataId_ = "";
    public java.lang.String getDataId() { return dataId_; }
    public boolean hasDataId() { return hasDataId; }
    public Data setDataId(java.lang.String value) {
      hasDataId = true;
      dataId_ = value;
      return this;
    }
    public Data clearDataId() {
      hasDataId = false;
      dataId_ = "";
      return this;
    }

    // required bytes content = 2;
    public static final int CONTENT_FIELD_NUMBER = 2;
    private boolean hasContent;
    private com.google.protobuf.micro.ByteStringMicro content_ = com.google.protobuf.micro.ByteStringMicro.EMPTY;
    public com.google.protobuf.micro.ByteStringMicro getContent() { return content_; }
    public boolean hasContent() { return hasContent; }
    public Data setContent(com.google.protobuf.micro.ByteStringMicro value) {
      hasContent = true;
      content_ = value;
      return this;
    }
    public Data clearContent() {
      hasContent = false;
      content_ = com.google.protobuf.micro.ByteStringMicro.EMPTY;
      return this;
    }

    // optional string extInfo = 3;
    public static final int EXTINFO_FIELD_NUMBER = 3;
    private boolean hasExtInfo;
    private java.lang.String extInfo_ = "";
    public java.lang.String getExtInfo() { return extInfo_; }
    public boolean hasExtInfo() { return hasExtInfo; }
    public Data setExtInfo(java.lang.String value) {
      hasExtInfo = true;
      extInfo_ = value;
      return this;
    }
    public Data clearExtInfo() {
      hasExtInfo = false;
      extInfo_ = "";
      return this;
    }

    public final Data clear() {
      clearDataId();
      clearContent();
      clearExtInfo();
      cachedSize = -1;
      return this;
    }

    public final boolean isInitialized() {
      if (!hasDataId) return false;
      if (!hasContent) return false;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.micro.CodedOutputStreamMicro output)
                        throws java.io.IOException {
      if (hasDataId()) {
        output.writeString(1, getDataId());
      }
      if (hasContent()) {
        output.writeBytes(2, getContent());
      }
      if (hasExtInfo()) {
        output.writeString(3, getExtInfo());
      }
    }

    private int cachedSize = -1;
    @Override
    public int getCachedSize() {
      if (cachedSize < 0) {
        // getSerializedSize sets cachedSize
        getSerializedSize();
      }
      return cachedSize;
    }

    @Override
    public int getSerializedSize() {
      int size = 0;
      if (hasDataId()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeStringSize(1, getDataId());
      }
      if (hasContent()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeBytesSize(2, getContent());
      }
      if (hasExtInfo()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeStringSize(3, getExtInfo());
      }
      cachedSize = size;
      return size;
    }

    @Override
    public Data mergeFrom(
        com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            setDataId(input.readString());
            break;
          }
          case 18: {
            setContent(input.readBytes());
            break;
          }
          case 26: {
            setExtInfo(input.readString());
            break;
          }
        }
      }
    }

    public static Data parseFrom(byte[] data)
        throws com.google.protobuf.micro.InvalidProtocolBufferMicroException {
      return (Data) (new Data().mergeFrom(data));
    }

    public static Data parseFrom(
            com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      return new Data().mergeFrom(input);
    }

  }

}
