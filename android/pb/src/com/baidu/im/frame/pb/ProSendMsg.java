// Generated by the protocol buffer compiler.  DO NOT EDIT!

package com.baidu.im.frame.pb;

public final class ProSendMsg {
  private ProSendMsg() {}
  @SuppressWarnings("hiding")
  public static final class SendMsgReq extends
      com.google.protobuf.micro.MessageMicro {
    public SendMsgReq() {}

    // required .OneMsg msg = 1;
    public static final int MSG_FIELD_NUMBER = 1;
    private boolean hasMsg;
    private com.baidu.im.frame.pb.ObjOneMsg.OneMsg msg_ = null;
    public boolean hasMsg() { return hasMsg; }
    public com.baidu.im.frame.pb.ObjOneMsg.OneMsg getMsg() { return msg_; }
    public SendMsgReq setMsg(com.baidu.im.frame.pb.ObjOneMsg.OneMsg value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hasMsg = true;
      msg_ = value;
      return this;
    }
    public SendMsgReq clearMsg() {
      hasMsg = false;
      msg_ = null;
      return this;
    }

    public final SendMsgReq clear() {
      clearMsg();
      cachedSize = -1;
      return this;
    }

    public final boolean isInitialized() {
      if (!hasMsg) return false;
      if (!getMsg().isInitialized()) return false;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.micro.CodedOutputStreamMicro output)
                        throws java.io.IOException {
      if (hasMsg()) {
        output.writeMessage(1, getMsg());
      }
    }

    private int cachedSize = -1;
    @Override
    public int getCachedSize() {
      if (cachedSize < 0) {
        // getSerializedSize sets cachedSize
        getSerializedSize();
      }
      return cachedSize;
    }

    @Override
    public int getSerializedSize() {
      int size = 0;
      if (hasMsg()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeMessageSize(1, getMsg());
      }
      cachedSize = size;
      return size;
    }

    @Override
    public SendMsgReq mergeFrom(
        com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            com.baidu.im.frame.pb.ObjOneMsg.OneMsg value = new com.baidu.im.frame.pb.ObjOneMsg.OneMsg();
            input.readMessage(value);
            setMsg(value);
            break;
          }
        }
      }
    }

    public static SendMsgReq parseFrom(byte[] data)
        throws com.google.protobuf.micro.InvalidProtocolBufferMicroException {
      return (SendMsgReq) (new SendMsgReq().mergeFrom(data));
    }

    public static SendMsgReq parseFrom(
            com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      return new SendMsgReq().mergeFrom(input);
    }

  }

  @SuppressWarnings("hiding")
  public static final class SendMsgRsp extends
      com.google.protobuf.micro.MessageMicro {
    public SendMsgRsp() {}

    // optional uint64 seq = 1;
    public static final int SEQ_FIELD_NUMBER = 1;
    private boolean hasSeq;
    private long seq_ = 0L;
    public long getSeq() { return seq_; }
    public boolean hasSeq() { return hasSeq; }
    public SendMsgRsp setSeq(long value) {
      hasSeq = true;
      seq_ = value;
      return this;
    }
    public SendMsgRsp clearSeq() {
      hasSeq = false;
      seq_ = 0L;
      return this;
    }

    // optional uint64 serverTime = 2;
    public static final int SERVERTIME_FIELD_NUMBER = 2;
    private boolean hasServerTime;
    private long serverTime_ = 0L;
    public long getServerTime() { return serverTime_; }
    public boolean hasServerTime() { return hasServerTime; }
    public SendMsgRsp setServerTime(long value) {
      hasServerTime = true;
      serverTime_ = value;
      return this;
    }
    public SendMsgRsp clearServerTime() {
      hasServerTime = false;
      serverTime_ = 0L;
      return this;
    }

    // optional uint64 previousSeq = 3;
    public static final int PREVIOUSSEQ_FIELD_NUMBER = 3;
    private boolean hasPreviousSeq;
    private long previousSeq_ = 0L;
    public long getPreviousSeq() { return previousSeq_; }
    public boolean hasPreviousSeq() { return hasPreviousSeq; }
    public SendMsgRsp setPreviousSeq(long value) {
      hasPreviousSeq = true;
      previousSeq_ = value;
      return this;
    }
    public SendMsgRsp clearPreviousSeq() {
      hasPreviousSeq = false;
      previousSeq_ = 0L;
      return this;
    }

    public final SendMsgRsp clear() {
      clearSeq();
      clearServerTime();
      clearPreviousSeq();
      cachedSize = -1;
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.micro.CodedOutputStreamMicro output)
                        throws java.io.IOException {
      if (hasSeq()) {
        output.writeUInt64(1, getSeq());
      }
      if (hasServerTime()) {
        output.writeUInt64(2, getServerTime());
      }
      if (hasPreviousSeq()) {
        output.writeUInt64(3, getPreviousSeq());
      }
    }

    private int cachedSize = -1;
    @Override
    public int getCachedSize() {
      if (cachedSize < 0) {
        // getSerializedSize sets cachedSize
        getSerializedSize();
      }
      return cachedSize;
    }

    @Override
    public int getSerializedSize() {
      int size = 0;
      if (hasSeq()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeUInt64Size(1, getSeq());
      }
      if (hasServerTime()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeUInt64Size(2, getServerTime());
      }
      if (hasPreviousSeq()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeUInt64Size(3, getPreviousSeq());
      }
      cachedSize = size;
      return size;
    }

    @Override
    public SendMsgRsp mergeFrom(
        com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            setSeq(input.readUInt64());
            break;
          }
          case 16: {
            setServerTime(input.readUInt64());
            break;
          }
          case 24: {
            setPreviousSeq(input.readUInt64());
            break;
          }
        }
      }
    }

    public static SendMsgRsp parseFrom(byte[] data)
        throws com.google.protobuf.micro.InvalidProtocolBufferMicroException {
      return (SendMsgRsp) (new SendMsgRsp().mergeFrom(data));
    }

    public static SendMsgRsp parseFrom(
            com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      return new SendMsgRsp().mergeFrom(input);
    }

  }

}
