// Generated by the protocol buffer compiler.  DO NOT EDIT!

package com.baidu.im.frame.pb;

public final class ObjInformDesc {
  private ObjInformDesc() {}
  @SuppressWarnings("hiding")
  public static final class InformDesc extends
      com.google.protobuf.micro.MessageMicro {
    public InformDesc() {}

    // required uint32 builderId = 1;
    public static final int BUILDERID_FIELD_NUMBER = 1;
    private boolean hasBuilderId;
    private int builderId_ = 0;
    public int getBuilderId() { return builderId_; }
    public boolean hasBuilderId() { return hasBuilderId; }
    public InformDesc setBuilderId(int value) {
      hasBuilderId = true;
      builderId_ = value;
      return this;
    }
    public InformDesc clearBuilderId() {
      hasBuilderId = false;
      builderId_ = 0;
      return this;
    }

    // repeated .KV builderArgs = 2;
    public static final int BUILDERARGS_FIELD_NUMBER = 2;
    private java.util.List<com.baidu.im.frame.pb.ObjKv.KV> builderArgs_ =
      java.util.Collections.emptyList();
    public java.util.List<com.baidu.im.frame.pb.ObjKv.KV> getBuilderArgsList() {
      return builderArgs_;
    }
    public int getBuilderArgsCount() { return builderArgs_.size(); }
    public com.baidu.im.frame.pb.ObjKv.KV getBuilderArgs(int index) {
      return builderArgs_.get(index);
    }
    public InformDesc setBuilderArgs(int index, com.baidu.im.frame.pb.ObjKv.KV value) {
      if (value == null) {
        throw new NullPointerException();
      }
      builderArgs_.set(index, value);
      return this;
    }
    public InformDesc addBuilderArgs(com.baidu.im.frame.pb.ObjKv.KV value) {
      if (value == null) {
        throw new NullPointerException();
      }
      if (builderArgs_.isEmpty()) {
        builderArgs_ = new java.util.ArrayList<com.baidu.im.frame.pb.ObjKv.KV>();
      }
      builderArgs_.add(value);
      return this;
    }
    public InformDesc clearBuilderArgs() {
      builderArgs_ = java.util.Collections.emptyList();
      return this;
    }

    // required uint32 openType = 3;
    public static final int OPENTYPE_FIELD_NUMBER = 3;
    private boolean hasOpenType;
    private int openType_ = 0;
    public int getOpenType() { return openType_; }
    public boolean hasOpenType() { return hasOpenType; }
    public InformDesc setOpenType(int value) {
      hasOpenType = true;
      openType_ = value;
      return this;
    }
    public InformDesc clearOpenType() {
      hasOpenType = false;
      openType_ = 0;
      return this;
    }

    // repeated .KV openArgs = 4;
    public static final int OPENARGS_FIELD_NUMBER = 4;
    private java.util.List<com.baidu.im.frame.pb.ObjKv.KV> openArgs_ =
      java.util.Collections.emptyList();
    public java.util.List<com.baidu.im.frame.pb.ObjKv.KV> getOpenArgsList() {
      return openArgs_;
    }
    public int getOpenArgsCount() { return openArgs_.size(); }
    public com.baidu.im.frame.pb.ObjKv.KV getOpenArgs(int index) {
      return openArgs_.get(index);
    }
    public InformDesc setOpenArgs(int index, com.baidu.im.frame.pb.ObjKv.KV value) {
      if (value == null) {
        throw new NullPointerException();
      }
      openArgs_.set(index, value);
      return this;
    }
    public InformDesc addOpenArgs(com.baidu.im.frame.pb.ObjKv.KV value) {
      if (value == null) {
        throw new NullPointerException();
      }
      if (openArgs_.isEmpty()) {
        openArgs_ = new java.util.ArrayList<com.baidu.im.frame.pb.ObjKv.KV>();
      }
      openArgs_.add(value);
      return this;
    }
    public InformDesc clearOpenArgs() {
      openArgs_ = java.util.Collections.emptyList();
      return this;
    }

    public final InformDesc clear() {
      clearBuilderId();
      clearBuilderArgs();
      clearOpenType();
      clearOpenArgs();
      cachedSize = -1;
      return this;
    }

    public final boolean isInitialized() {
      if (!hasBuilderId) return false;
      if (!hasOpenType) return false;
      for (com.baidu.im.frame.pb.ObjKv.KV element : getBuilderArgsList()) {
        if (!element.isInitialized()) return false;
      }
      for (com.baidu.im.frame.pb.ObjKv.KV element : getOpenArgsList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.micro.CodedOutputStreamMicro output)
                        throws java.io.IOException {
      if (hasBuilderId()) {
        output.writeUInt32(1, getBuilderId());
      }
      for (com.baidu.im.frame.pb.ObjKv.KV element : getBuilderArgsList()) {
        output.writeMessage(2, element);
      }
      if (hasOpenType()) {
        output.writeUInt32(3, getOpenType());
      }
      for (com.baidu.im.frame.pb.ObjKv.KV element : getOpenArgsList()) {
        output.writeMessage(4, element);
      }
    }

    private int cachedSize = -1;
    @Override
    public int getCachedSize() {
      if (cachedSize < 0) {
        // getSerializedSize sets cachedSize
        getSerializedSize();
      }
      return cachedSize;
    }

    @Override
    public int getSerializedSize() {
      int size = 0;
      if (hasBuilderId()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeUInt32Size(1, getBuilderId());
      }
      for (com.baidu.im.frame.pb.ObjKv.KV element : getBuilderArgsList()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeMessageSize(2, element);
      }
      if (hasOpenType()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeUInt32Size(3, getOpenType());
      }
      for (com.baidu.im.frame.pb.ObjKv.KV element : getOpenArgsList()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeMessageSize(4, element);
      }
      cachedSize = size;
      return size;
    }

    @Override
    public InformDesc mergeFrom(
        com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            setBuilderId(input.readUInt32());
            break;
          }
          case 18: {
            com.baidu.im.frame.pb.ObjKv.KV value = new com.baidu.im.frame.pb.ObjKv.KV();
            input.readMessage(value);
            addBuilderArgs(value);
            break;
          }
          case 24: {
            setOpenType(input.readUInt32());
            break;
          }
          case 34: {
            com.baidu.im.frame.pb.ObjKv.KV value = new com.baidu.im.frame.pb.ObjKv.KV();
            input.readMessage(value);
            addOpenArgs(value);
            break;
          }
        }
      }
    }

    public static InformDesc parseFrom(byte[] data)
        throws com.google.protobuf.micro.InvalidProtocolBufferMicroException {
      return (InformDesc) (new InformDesc().mergeFrom(data));
    }

    public static InformDesc parseFrom(
            com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      return new InformDesc().mergeFrom(input);
    }

  }

}
