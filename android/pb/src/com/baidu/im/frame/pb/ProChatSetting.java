// Generated by the protocol buffer compiler.  DO NOT EDIT!

package com.baidu.im.frame.pb;

public final class ProChatSetting {
  private ProChatSetting() {}
  // enum EMessageReceiveMode
  public static final int RECEIVE_NOTIFICATION = 1;
  public static final int RECEIVE_MESSAGE_ONLY = 2;
  public static final int BLOCK_MESSAGE = 3;

  @SuppressWarnings("hiding")
  public static final class ChatSetting extends
      com.google.protobuf.micro.MessageMicro {
    public ChatSetting() {}

    // required .EChatType chatType = 1;
    public static final int CHATTYPE_FIELD_NUMBER = 1;
    private boolean hasChatType;
    private int chatType_ = com.baidu.im.frame.pb.EnumChatType.CHAT_P2P;
    public boolean hasChatType() { return hasChatType; }
    public int getChatType() { return chatType_; }
    public ChatSetting setChatType(int value) {
      hasChatType = true;
      chatType_ = value;
      return this;
    }
    public ChatSetting clearChatType() {
      hasChatType = false;
      chatType_ = com.baidu.im.frame.pb.EnumChatType.CHAT_P2P;
      return this;
    }

    // required string targetID = 2;
    public static final int TARGETID_FIELD_NUMBER = 2;
    private boolean hasTargetID;
    private java.lang.String targetID_ = "";
    public java.lang.String getTargetID() { return targetID_; }
    public boolean hasTargetID() { return hasTargetID; }
    public ChatSetting setTargetID(java.lang.String value) {
      hasTargetID = true;
      targetID_ = value;
      return this;
    }
    public ChatSetting clearTargetID() {
      hasTargetID = false;
      targetID_ = "";
      return this;
    }

    // optional .EMessageReceiveMode receiveMode = 3;
    public static final int RECEIVEMODE_FIELD_NUMBER = 3;
    private boolean hasReceiveMode;
    private int receiveMode_ = com.baidu.im.frame.pb.ProChatSetting.RECEIVE_NOTIFICATION;
    public boolean hasReceiveMode() { return hasReceiveMode; }
    public int getReceiveMode() { return receiveMode_; }
    public ChatSetting setReceiveMode(int value) {
      hasReceiveMode = true;
      receiveMode_ = value;
      return this;
    }
    public ChatSetting clearReceiveMode() {
      hasReceiveMode = false;
      receiveMode_ = com.baidu.im.frame.pb.ProChatSetting.RECEIVE_NOTIFICATION;
      return this;
    }

    // optional uint64 lastUpdate = 4;
    public static final int LASTUPDATE_FIELD_NUMBER = 4;
    private boolean hasLastUpdate;
    private long lastUpdate_ = 0L;
    public long getLastUpdate() { return lastUpdate_; }
    public boolean hasLastUpdate() { return hasLastUpdate; }
    public ChatSetting setLastUpdate(long value) {
      hasLastUpdate = true;
      lastUpdate_ = value;
      return this;
    }
    public ChatSetting clearLastUpdate() {
      hasLastUpdate = false;
      lastUpdate_ = 0L;
      return this;
    }

    public final ChatSetting clear() {
      clearChatType();
      clearTargetID();
      clearReceiveMode();
      clearLastUpdate();
      cachedSize = -1;
      return this;
    }

    public final boolean isInitialized() {
      if (!hasChatType) return false;
      if (!hasTargetID) return false;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.micro.CodedOutputStreamMicro output)
                        throws java.io.IOException {
      if (hasChatType()) {
        output.writeInt32(1, getChatType());
      }
      if (hasTargetID()) {
        output.writeString(2, getTargetID());
      }
      if (hasReceiveMode()) {
        output.writeInt32(3, getReceiveMode());
      }
      if (hasLastUpdate()) {
        output.writeUInt64(4, getLastUpdate());
      }
    }

    private int cachedSize = -1;
    @Override
    public int getCachedSize() {
      if (cachedSize < 0) {
        // getSerializedSize sets cachedSize
        getSerializedSize();
      }
      return cachedSize;
    }

    @Override
    public int getSerializedSize() {
      int size = 0;
      if (hasChatType()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeInt32Size(1, getChatType());
      }
      if (hasTargetID()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeStringSize(2, getTargetID());
      }
      if (hasReceiveMode()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeInt32Size(3, getReceiveMode());
      }
      if (hasLastUpdate()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeUInt64Size(4, getLastUpdate());
      }
      cachedSize = size;
      return size;
    }

    @Override
    public ChatSetting mergeFrom(
        com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
              setChatType(input.readInt32());
            break;
          }
          case 18: {
            setTargetID(input.readString());
            break;
          }
          case 24: {
              setReceiveMode(input.readInt32());
            break;
          }
          case 32: {
            setLastUpdate(input.readUInt64());
            break;
          }
        }
      }
    }

    public static ChatSetting parseFrom(byte[] data)
        throws com.google.protobuf.micro.InvalidProtocolBufferMicroException {
      return (ChatSetting) (new ChatSetting().mergeFrom(data));
    }

    public static ChatSetting parseFrom(
            com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      return new ChatSetting().mergeFrom(input);
    }

  }

  @SuppressWarnings("hiding")
  public static final class GetChatSettingsReq extends
      com.google.protobuf.micro.MessageMicro {
    public GetChatSettingsReq() {}

    // required .EChatType chatType = 1;
    public static final int CHATTYPE_FIELD_NUMBER = 1;
    private boolean hasChatType;
    private int chatType_ = com.baidu.im.frame.pb.EnumChatType.CHAT_P2P;
    public boolean hasChatType() { return hasChatType; }
    public int getChatType() { return chatType_; }
    public GetChatSettingsReq setChatType(int value) {
      hasChatType = true;
      chatType_ = value;
      return this;
    }
    public GetChatSettingsReq clearChatType() {
      hasChatType = false;
      chatType_ = com.baidu.im.frame.pb.EnumChatType.CHAT_P2P;
      return this;
    }

    // repeated string targetIDList = 2;
    public static final int TARGETIDLIST_FIELD_NUMBER = 2;
    private java.util.List<java.lang.String> targetIDList_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.String> getTargetIDListList() {
      return targetIDList_;
    }
    public int getTargetIDListCount() { return targetIDList_.size(); }
    public java.lang.String getTargetIDList(int index) {
      return targetIDList_.get(index);
    }
    public GetChatSettingsReq setTargetIDList(int index, java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  targetIDList_.set(index, value);
      return this;
    }
    public GetChatSettingsReq addTargetIDList(java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  if (targetIDList_.isEmpty()) {
        targetIDList_ = new java.util.ArrayList<java.lang.String>();
      }
      targetIDList_.add(value);
      return this;
    }
    public GetChatSettingsReq clearTargetIDList() {
      targetIDList_ = java.util.Collections.emptyList();
      return this;
    }

    public final GetChatSettingsReq clear() {
      clearChatType();
      clearTargetIDList();
      cachedSize = -1;
      return this;
    }

    public final boolean isInitialized() {
      if (!hasChatType) return false;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.micro.CodedOutputStreamMicro output)
                        throws java.io.IOException {
      if (hasChatType()) {
        output.writeInt32(1, getChatType());
      }
      for (java.lang.String element : getTargetIDListList()) {
        output.writeString(2, element);
      }
    }

    private int cachedSize = -1;
    @Override
    public int getCachedSize() {
      if (cachedSize < 0) {
        // getSerializedSize sets cachedSize
        getSerializedSize();
      }
      return cachedSize;
    }

    @Override
    public int getSerializedSize() {
      int size = 0;
      if (hasChatType()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeInt32Size(1, getChatType());
      }
      {
        int dataSize = 0;
        for (java.lang.String element : getTargetIDListList()) {
          dataSize += com.google.protobuf.micro.CodedOutputStreamMicro
            .computeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getTargetIDListList().size();
      }
      cachedSize = size;
      return size;
    }

    @Override
    public GetChatSettingsReq mergeFrom(
        com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
              setChatType(input.readInt32());
            break;
          }
          case 18: {
            addTargetIDList(input.readString());
            break;
          }
        }
      }
    }

    public static GetChatSettingsReq parseFrom(byte[] data)
        throws com.google.protobuf.micro.InvalidProtocolBufferMicroException {
      return (GetChatSettingsReq) (new GetChatSettingsReq().mergeFrom(data));
    }

    public static GetChatSettingsReq parseFrom(
            com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      return new GetChatSettingsReq().mergeFrom(input);
    }

  }

  @SuppressWarnings("hiding")
  public static final class GetChatSettingsRsp extends
      com.google.protobuf.micro.MessageMicro {
    public GetChatSettingsRsp() {}

    // repeated .ChatSetting settings = 1;
    public static final int SETTINGS_FIELD_NUMBER = 1;
    private java.util.List<com.baidu.im.frame.pb.ProChatSetting.ChatSetting> settings_ =
      java.util.Collections.emptyList();
    public java.util.List<com.baidu.im.frame.pb.ProChatSetting.ChatSetting> getSettingsList() {
      return settings_;
    }
    public int getSettingsCount() { return settings_.size(); }
    public com.baidu.im.frame.pb.ProChatSetting.ChatSetting getSettings(int index) {
      return settings_.get(index);
    }
    public GetChatSettingsRsp setSettings(int index, com.baidu.im.frame.pb.ProChatSetting.ChatSetting value) {
      if (value == null) {
        throw new NullPointerException();
      }
      settings_.set(index, value);
      return this;
    }
    public GetChatSettingsRsp addSettings(com.baidu.im.frame.pb.ProChatSetting.ChatSetting value) {
      if (value == null) {
        throw new NullPointerException();
      }
      if (settings_.isEmpty()) {
        settings_ = new java.util.ArrayList<com.baidu.im.frame.pb.ProChatSetting.ChatSetting>();
      }
      settings_.add(value);
      return this;
    }
    public GetChatSettingsRsp clearSettings() {
      settings_ = java.util.Collections.emptyList();
      return this;
    }

    public final GetChatSettingsRsp clear() {
      clearSettings();
      cachedSize = -1;
      return this;
    }

    public final boolean isInitialized() {
      for (com.baidu.im.frame.pb.ProChatSetting.ChatSetting element : getSettingsList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.micro.CodedOutputStreamMicro output)
                        throws java.io.IOException {
      for (com.baidu.im.frame.pb.ProChatSetting.ChatSetting element : getSettingsList()) {
        output.writeMessage(1, element);
      }
    }

    private int cachedSize = -1;
    @Override
    public int getCachedSize() {
      if (cachedSize < 0) {
        // getSerializedSize sets cachedSize
        getSerializedSize();
      }
      return cachedSize;
    }

    @Override
    public int getSerializedSize() {
      int size = 0;
      for (com.baidu.im.frame.pb.ProChatSetting.ChatSetting element : getSettingsList()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeMessageSize(1, element);
      }
      cachedSize = size;
      return size;
    }

    @Override
    public GetChatSettingsRsp mergeFrom(
        com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            com.baidu.im.frame.pb.ProChatSetting.ChatSetting value = new com.baidu.im.frame.pb.ProChatSetting.ChatSetting();
            input.readMessage(value);
            addSettings(value);
            break;
          }
        }
      }
    }

    public static GetChatSettingsRsp parseFrom(byte[] data)
        throws com.google.protobuf.micro.InvalidProtocolBufferMicroException {
      return (GetChatSettingsRsp) (new GetChatSettingsRsp().mergeFrom(data));
    }

    public static GetChatSettingsRsp parseFrom(
            com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      return new GetChatSettingsRsp().mergeFrom(input);
    }

  }

  @SuppressWarnings("hiding")
  public static final class SetChatSettingsReq extends
      com.google.protobuf.micro.MessageMicro {
    public SetChatSettingsReq() {}

    // repeated .ChatSetting settings = 1;
    public static final int SETTINGS_FIELD_NUMBER = 1;
    private java.util.List<com.baidu.im.frame.pb.ProChatSetting.ChatSetting> settings_ =
      java.util.Collections.emptyList();
    public java.util.List<com.baidu.im.frame.pb.ProChatSetting.ChatSetting> getSettingsList() {
      return settings_;
    }
    public int getSettingsCount() { return settings_.size(); }
    public com.baidu.im.frame.pb.ProChatSetting.ChatSetting getSettings(int index) {
      return settings_.get(index);
    }
    public SetChatSettingsReq setSettings(int index, com.baidu.im.frame.pb.ProChatSetting.ChatSetting value) {
      if (value == null) {
        throw new NullPointerException();
      }
      settings_.set(index, value);
      return this;
    }
    public SetChatSettingsReq addSettings(com.baidu.im.frame.pb.ProChatSetting.ChatSetting value) {
      if (value == null) {
        throw new NullPointerException();
      }
      if (settings_.isEmpty()) {
        settings_ = new java.util.ArrayList<com.baidu.im.frame.pb.ProChatSetting.ChatSetting>();
      }
      settings_.add(value);
      return this;
    }
    public SetChatSettingsReq clearSettings() {
      settings_ = java.util.Collections.emptyList();
      return this;
    }

    public final SetChatSettingsReq clear() {
      clearSettings();
      cachedSize = -1;
      return this;
    }

    public final boolean isInitialized() {
      for (com.baidu.im.frame.pb.ProChatSetting.ChatSetting element : getSettingsList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.micro.CodedOutputStreamMicro output)
                        throws java.io.IOException {
      for (com.baidu.im.frame.pb.ProChatSetting.ChatSetting element : getSettingsList()) {
        output.writeMessage(1, element);
      }
    }

    private int cachedSize = -1;
    @Override
    public int getCachedSize() {
      if (cachedSize < 0) {
        // getSerializedSize sets cachedSize
        getSerializedSize();
      }
      return cachedSize;
    }

    @Override
    public int getSerializedSize() {
      int size = 0;
      for (com.baidu.im.frame.pb.ProChatSetting.ChatSetting element : getSettingsList()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeMessageSize(1, element);
      }
      cachedSize = size;
      return size;
    }

    @Override
    public SetChatSettingsReq mergeFrom(
        com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            com.baidu.im.frame.pb.ProChatSetting.ChatSetting value = new com.baidu.im.frame.pb.ProChatSetting.ChatSetting();
            input.readMessage(value);
            addSettings(value);
            break;
          }
        }
      }
    }

    public static SetChatSettingsReq parseFrom(byte[] data)
        throws com.google.protobuf.micro.InvalidProtocolBufferMicroException {
      return (SetChatSettingsReq) (new SetChatSettingsReq().mergeFrom(data));
    }

    public static SetChatSettingsReq parseFrom(
            com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      return new SetChatSettingsReq().mergeFrom(input);
    }

  }

  @SuppressWarnings("hiding")
  public static final class SetChatSettingsRsp extends
      com.google.protobuf.micro.MessageMicro {
    public SetChatSettingsRsp() {}

    public final SetChatSettingsRsp clear() {
      cachedSize = -1;
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.micro.CodedOutputStreamMicro output) {
    }

    private int cachedSize = -1;
    @Override
    public int getCachedSize() {
      if (cachedSize < 0) {
        // getSerializedSize sets cachedSize
        getSerializedSize();
      }
      return cachedSize;
    }

    @Override
    public int getSerializedSize() {
      int size = 0;
      cachedSize = size;
      return size;
    }

    @Override
    public SetChatSettingsRsp mergeFrom(
        com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
        }
      }
    }

    public static SetChatSettingsRsp parseFrom(byte[] data)
        throws com.google.protobuf.micro.InvalidProtocolBufferMicroException {
      return (SetChatSettingsRsp) (new SetChatSettingsRsp().mergeFrom(data));
    }

    public static SetChatSettingsRsp parseFrom(
            com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      return new SetChatSettingsRsp().mergeFrom(input);
    }

  }

  @SuppressWarnings("hiding")
  public static final class ChatSettingsChangedNotify extends
      com.google.protobuf.micro.MessageMicro {
    public ChatSettingsChangedNotify() {}

    // repeated .ChatSetting settings = 1;
    public static final int SETTINGS_FIELD_NUMBER = 1;
    private java.util.List<com.baidu.im.frame.pb.ProChatSetting.ChatSetting> settings_ =
      java.util.Collections.emptyList();
    public java.util.List<com.baidu.im.frame.pb.ProChatSetting.ChatSetting> getSettingsList() {
      return settings_;
    }
    public int getSettingsCount() { return settings_.size(); }
    public com.baidu.im.frame.pb.ProChatSetting.ChatSetting getSettings(int index) {
      return settings_.get(index);
    }
    public ChatSettingsChangedNotify setSettings(int index, com.baidu.im.frame.pb.ProChatSetting.ChatSetting value) {
      if (value == null) {
        throw new NullPointerException();
      }
      settings_.set(index, value);
      return this;
    }
    public ChatSettingsChangedNotify addSettings(com.baidu.im.frame.pb.ProChatSetting.ChatSetting value) {
      if (value == null) {
        throw new NullPointerException();
      }
      if (settings_.isEmpty()) {
        settings_ = new java.util.ArrayList<com.baidu.im.frame.pb.ProChatSetting.ChatSetting>();
      }
      settings_.add(value);
      return this;
    }
    public ChatSettingsChangedNotify clearSettings() {
      settings_ = java.util.Collections.emptyList();
      return this;
    }

    public final ChatSettingsChangedNotify clear() {
      clearSettings();
      cachedSize = -1;
      return this;
    }

    public final boolean isInitialized() {
      for (com.baidu.im.frame.pb.ProChatSetting.ChatSetting element : getSettingsList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.micro.CodedOutputStreamMicro output)
                        throws java.io.IOException {
      for (com.baidu.im.frame.pb.ProChatSetting.ChatSetting element : getSettingsList()) {
        output.writeMessage(1, element);
      }
    }

    private int cachedSize = -1;
    @Override
    public int getCachedSize() {
      if (cachedSize < 0) {
        // getSerializedSize sets cachedSize
        getSerializedSize();
      }
      return cachedSize;
    }

    @Override
    public int getSerializedSize() {
      int size = 0;
      for (com.baidu.im.frame.pb.ProChatSetting.ChatSetting element : getSettingsList()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeMessageSize(1, element);
      }
      cachedSize = size;
      return size;
    }

    @Override
    public ChatSettingsChangedNotify mergeFrom(
        com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            com.baidu.im.frame.pb.ProChatSetting.ChatSetting value = new com.baidu.im.frame.pb.ProChatSetting.ChatSetting();
            input.readMessage(value);
            addSettings(value);
            break;
          }
        }
      }
    }

    public static ChatSettingsChangedNotify parseFrom(byte[] data)
        throws com.google.protobuf.micro.InvalidProtocolBufferMicroException {
      return (ChatSettingsChangedNotify) (new ChatSettingsChangedNotify().mergeFrom(data));
    }

    public static ChatSettingsChangedNotify parseFrom(
            com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      return new ChatSettingsChangedNotify().mergeFrom(input);
    }

  }

  @SuppressWarnings("hiding")
  public static final class QueryChatSettingsReq extends
      com.google.protobuf.micro.MessageMicro {
    public QueryChatSettingsReq() {}

    // required uint64 lastQueryTime = 1;
    public static final int LASTQUERYTIME_FIELD_NUMBER = 1;
    private boolean hasLastQueryTime;
    private long lastQueryTime_ = 0L;
    public long getLastQueryTime() { return lastQueryTime_; }
    public boolean hasLastQueryTime() { return hasLastQueryTime; }
    public QueryChatSettingsReq setLastQueryTime(long value) {
      hasLastQueryTime = true;
      lastQueryTime_ = value;
      return this;
    }
    public QueryChatSettingsReq clearLastQueryTime() {
      hasLastQueryTime = false;
      lastQueryTime_ = 0L;
      return this;
    }

    public final QueryChatSettingsReq clear() {
      clearLastQueryTime();
      cachedSize = -1;
      return this;
    }

    public final boolean isInitialized() {
      if (!hasLastQueryTime) return false;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.micro.CodedOutputStreamMicro output)
                        throws java.io.IOException {
      if (hasLastQueryTime()) {
        output.writeUInt64(1, getLastQueryTime());
      }
    }

    private int cachedSize = -1;
    @Override
    public int getCachedSize() {
      if (cachedSize < 0) {
        // getSerializedSize sets cachedSize
        getSerializedSize();
      }
      return cachedSize;
    }

    @Override
    public int getSerializedSize() {
      int size = 0;
      if (hasLastQueryTime()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeUInt64Size(1, getLastQueryTime());
      }
      cachedSize = size;
      return size;
    }

    @Override
    public QueryChatSettingsReq mergeFrom(
        com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            setLastQueryTime(input.readUInt64());
            break;
          }
        }
      }
    }

    public static QueryChatSettingsReq parseFrom(byte[] data)
        throws com.google.protobuf.micro.InvalidProtocolBufferMicroException {
      return (QueryChatSettingsReq) (new QueryChatSettingsReq().mergeFrom(data));
    }

    public static QueryChatSettingsReq parseFrom(
            com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      return new QueryChatSettingsReq().mergeFrom(input);
    }

  }

  @SuppressWarnings("hiding")
  public static final class QueryChatSettingsRsp extends
      com.google.protobuf.micro.MessageMicro {
    public QueryChatSettingsRsp() {}

    // required uint64 lastQueryTime = 1;
    public static final int LASTQUERYTIME_FIELD_NUMBER = 1;
    private boolean hasLastQueryTime;
    private long lastQueryTime_ = 0L;
    public long getLastQueryTime() { return lastQueryTime_; }
    public boolean hasLastQueryTime() { return hasLastQueryTime; }
    public QueryChatSettingsRsp setLastQueryTime(long value) {
      hasLastQueryTime = true;
      lastQueryTime_ = value;
      return this;
    }
    public QueryChatSettingsRsp clearLastQueryTime() {
      hasLastQueryTime = false;
      lastQueryTime_ = 0L;
      return this;
    }

    // repeated .ChatSetting settings = 2;
    public static final int SETTINGS_FIELD_NUMBER = 2;
    private java.util.List<com.baidu.im.frame.pb.ProChatSetting.ChatSetting> settings_ =
      java.util.Collections.emptyList();
    public java.util.List<com.baidu.im.frame.pb.ProChatSetting.ChatSetting> getSettingsList() {
      return settings_;
    }
    public int getSettingsCount() { return settings_.size(); }
    public com.baidu.im.frame.pb.ProChatSetting.ChatSetting getSettings(int index) {
      return settings_.get(index);
    }
    public QueryChatSettingsRsp setSettings(int index, com.baidu.im.frame.pb.ProChatSetting.ChatSetting value) {
      if (value == null) {
        throw new NullPointerException();
      }
      settings_.set(index, value);
      return this;
    }
    public QueryChatSettingsRsp addSettings(com.baidu.im.frame.pb.ProChatSetting.ChatSetting value) {
      if (value == null) {
        throw new NullPointerException();
      }
      if (settings_.isEmpty()) {
        settings_ = new java.util.ArrayList<com.baidu.im.frame.pb.ProChatSetting.ChatSetting>();
      }
      settings_.add(value);
      return this;
    }
    public QueryChatSettingsRsp clearSettings() {
      settings_ = java.util.Collections.emptyList();
      return this;
    }

    public final QueryChatSettingsRsp clear() {
      clearLastQueryTime();
      clearSettings();
      cachedSize = -1;
      return this;
    }

    public final boolean isInitialized() {
      if (!hasLastQueryTime) return false;
      for (com.baidu.im.frame.pb.ProChatSetting.ChatSetting element : getSettingsList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.micro.CodedOutputStreamMicro output)
                        throws java.io.IOException {
      if (hasLastQueryTime()) {
        output.writeUInt64(1, getLastQueryTime());
      }
      for (com.baidu.im.frame.pb.ProChatSetting.ChatSetting element : getSettingsList()) {
        output.writeMessage(2, element);
      }
    }

    private int cachedSize = -1;
    @Override
    public int getCachedSize() {
      if (cachedSize < 0) {
        // getSerializedSize sets cachedSize
        getSerializedSize();
      }
      return cachedSize;
    }

    @Override
    public int getSerializedSize() {
      int size = 0;
      if (hasLastQueryTime()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeUInt64Size(1, getLastQueryTime());
      }
      for (com.baidu.im.frame.pb.ProChatSetting.ChatSetting element : getSettingsList()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeMessageSize(2, element);
      }
      cachedSize = size;
      return size;
    }

    @Override
    public QueryChatSettingsRsp mergeFrom(
        com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            setLastQueryTime(input.readUInt64());
            break;
          }
          case 18: {
            com.baidu.im.frame.pb.ProChatSetting.ChatSetting value = new com.baidu.im.frame.pb.ProChatSetting.ChatSetting();
            input.readMessage(value);
            addSettings(value);
            break;
          }
        }
      }
    }

    public static QueryChatSettingsRsp parseFrom(byte[] data)
        throws com.google.protobuf.micro.InvalidProtocolBufferMicroException {
      return (QueryChatSettingsRsp) (new QueryChatSettingsRsp().mergeFrom(data));
    }

    public static QueryChatSettingsRsp parseFrom(
            com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      return new QueryChatSettingsRsp().mergeFrom(input);
    }

  }

}
